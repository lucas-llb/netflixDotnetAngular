{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lucas/OneDrive/Documents/Github/netflixProjectFrontAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./episode.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./episode.component.scss?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EpisodeService } from '../../services/episodes.service';\nimport { SerieService } from '../../services/serie.service';\nlet EpisodeComponent = class EpisodeComponent {\n  route;\n  router;\n  episodeService;\n  serieService;\n  serie;\n  episodeTime = 0;\n  getEpisodeTime = 0;\n  isReady = false;\n  loading = true;\n  episodeOrder;\n  episodeId;\n  serieId;\n  player;\n  constructor(route, router, episodeService, serieService) {\n    this.route = route;\n    this.router = router;\n    this.episodeService = episodeService;\n    this.serieService = serieService;\n    this.episodeOrder = parseFloat(this.route.snapshot.paramMap.get('id') || '');\n    this.episodeId = parseFloat(this.route.snapshot.paramMap.get('episodeid') || '');\n    this.serieId = this.route.snapshot.paramMap.get('serieid') || '';\n  }\n  ngOnInit() {\n    if (!sessionStorage.getItem('netflix-token')) {\n      this.router.navigate(['/login']);\n    } else {\n      this.loading = false;\n    }\n    this.getSerie();\n    this.handleGetEpisodeTime();\n  }\n  handleGetEpisodeTime() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.episodeService.getWatchTime(_this.episodeId).subscribe({\n        next: res => {\n          if (res.data !== null) {\n            _this.getEpisodeTime = res.data.seconds;\n          }\n        }\n      });\n    })();\n  }\n  handleSetEpisodeTime() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.episodeService.setWatchTime({\n        episodeId: _this2.episodeId,\n        seconds: Math.round(_this2.episodeTime)\n      }).subscribe();\n    })();\n  }\n  getSerie() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof _this3.serieId !== 'string') return;\n      _this3.serieService.getEpisodes(_this3.serieId).subscribe({\n        next: res => {\n          _this3.serie = res.data;\n        }\n      });\n    })();\n  }\n  handlePlayerTime() {\n    this.player.seekTo(this.getEpisodeTime);\n    this.isReady = true;\n  }\n  handleLastEpisode() {\n    this.router.navigate([`/serie/episode/${this.episodeOrder - 1}`], {\n      queryParams: {\n        serieid: this.serie?.id,\n        episodeid: this.serie.episodes[this.episodeOrder - 1]?.id\n      }\n    });\n  }\n  handleNextEpisode() {\n    this.router.navigate([`/serie/episode/${this.episodeOrder + 1}`], {\n      queryParams: {\n        serieid: this.serie?.id,\n        episodeid: this.serie.episodes[this.episodeOrder + 1]?.id\n      }\n    });\n  }\n  static ctorParameters = () => [{\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }, {\n    type: EpisodeService\n  }, {\n    type: SerieService\n  }];\n  static propDecorators = {\n    player: [{\n      type: ViewChild,\n      args: ['player']\n    }]\n  };\n};\nEpisodeComponent = __decorate([Component({\n  selector: 'app-episode',\n  standalone: true,\n  imports: [],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], EpisodeComponent);\nexport { EpisodeComponent };","map":{"version":3,"names":["Component","ViewChild","ActivatedRoute","Router","EpisodeService","SerieService","EpisodeComponent","route","router","episodeService","serieService","serie","episodeTime","getEpisodeTime","isReady","loading","episodeOrder","episodeId","serieId","player","constructor","parseFloat","snapshot","paramMap","get","ngOnInit","sessionStorage","getItem","navigate","getSerie","handleGetEpisodeTime","_this","_asyncToGenerator","getWatchTime","subscribe","next","res","data","seconds","handleSetEpisodeTime","_this2","setWatchTime","Math","round","_this3","getEpisodes","handlePlayerTime","seekTo","handleLastEpisode","queryParams","serieid","id","episodeid","episodes","handleNextEpisode","args","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\pages\\episode\\episode.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EpisodeService } from '../../services/episodes.service';\r\nimport { SerieService, SerieType } from '../../services/serie.service';\r\n\r\n@Component({\r\n  selector: 'app-episode',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './episode.component.html',\r\n  styleUrl: './episode.component.scss'\r\n})\r\nexport class EpisodeComponent implements OnInit{\r\n  serie: SerieType | undefined;\r\n  episodeTime: number = 0;\r\n  getEpisodeTime: number = 0;\r\n  isReady: boolean = false;\r\n  loading: boolean = true;\r\n  episodeOrder: number;\r\n  episodeId: number;\r\n  serieId: string;\r\n\r\n  @ViewChild('player') player: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private episodeService: EpisodeService,\r\n    private serieService: SerieService\r\n  ) {\r\n    this.episodeOrder = parseFloat(this.route.snapshot.paramMap.get('id') || '');\r\n    this.episodeId = parseFloat(this.route.snapshot.paramMap.get('episodeid') || '');\r\n    this.serieId = this.route.snapshot.paramMap.get('serieid') || '';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!sessionStorage.getItem('netflix-token')) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n    this.getSerie();\r\n    this.handleGetEpisodeTime();\r\n  }\r\n\r\n  async handleGetEpisodeTime() {\r\n    this.episodeService.getWatchTime(this.episodeId).subscribe({\r\n      next: (res) => {\r\n        if (res.data !== null) {\r\n          this.getEpisodeTime = res.data.seconds;\r\n        }\r\n      }\r\n    });    \r\n  }\r\n\r\n  async handleSetEpisodeTime() {\r\n    this.episodeService.setWatchTime({\r\n      episodeId: this.episodeId,\r\n      seconds: Math.round(this.episodeTime)\r\n    }).subscribe();\r\n  }\r\n\r\n  async getSerie() {\r\n    if (typeof this.serieId !== 'string') return;\r\n    this.serieService.getEpisodes(this.serieId).subscribe({\r\n      next: (res) => {\r\n        this.serie = res.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  handlePlayerTime() {\r\n    this.player.seekTo(this.getEpisodeTime);\r\n    this.isReady = true;\r\n  }\r\n\r\n  handleLastEpisode() {\r\n    this.router.navigate([`/serie/episode/${this.episodeOrder - 1}`], { queryParams: { serieid: this.serie?.id, episodeid: this.serie!.episodes![this.episodeOrder - 1]?.id } });\r\n  }\r\n\r\n  handleNextEpisode() {\r\n    this.router.navigate([`/serie/episode/${this.episodeOrder + 1}`], { queryParams: { serieid: this.serie?.id, episodeid: this.serie!.episodes![this.episodeOrder + 1]?.id } });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}