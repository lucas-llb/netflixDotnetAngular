{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environment';\nlet ProfileService = class ProfileService {\n  http;\n  apiUrl = `${environment.BACKEND_API_URL}/users/current`;\n  constructor(http) {\n    this.http = http;\n  }\n  fetchCurrent() {\n    const token = sessionStorage.getItem('netflix-token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.get(this.apiUrl, {\n      headers\n    });\n  }\n  userUpdate(params) {\n    const token = sessionStorage.getItem('netflix-token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.put(this.apiUrl, params, {\n      headers\n    });\n  }\n  passwordUpdate(params) {\n    const token = sessionStorage.getItem('netflix-token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.put(`${this.apiUrl}/password`, params, {\n      headers\n    });\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nProfileService = __decorate([Injectable({\n  providedIn: 'root'\n})], ProfileService);\nexport { ProfileService };","map":{"version":3,"names":["Injectable","HttpClient","HttpHeaders","environment","ProfileService","http","apiUrl","BACKEND_API_URL","constructor","fetchCurrent","token","sessionStorage","getItem","headers","set","get","userUpdate","params","put","passwordUpdate","__decorate","providedIn"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\services\\profile.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../environment';\r\n\r\ninterface UserParams {\r\n  firstName: string;\r\n  lastName: string;\r\n  phone: string;\r\n  email: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface PasswordParams {\r\n  currentPassword: string;\r\n  newPassword: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private apiUrl = `${environment.BACKEND_API_URL}/users/current`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  fetchCurrent(): Observable<any> {\r\n    const token = sessionStorage.getItem('netflix-token');\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    return this.http.get<any>(this.apiUrl, { headers });\r\n  }\r\n\r\n  userUpdate(params: UserParams): Observable<any> {\r\n    const token = sessionStorage.getItem('netflix-token');\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    return this.http.put<any>(this.apiUrl, params, { headers });\r\n  }\r\n\r\n  passwordUpdate(params: PasswordParams): Observable<any> {\r\n    const token = sessionStorage.getItem('netflix-token');\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    return this.http.put<any>(`${this.apiUrl}/password`, params, { headers });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,gBAAgB;AAkBrC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGLC,IAAA;EAFZC,MAAM,GAAG,GAAGH,WAAW,CAACI,eAAe,gBAAgB;EAE/DC,YAAoBH,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCI,YAAYA,CAAA;IACV,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IACzE,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAM,IAAI,CAACT,MAAM,EAAE;MAAEO;IAAO,CAAE,CAAC;EACrD;EAEAG,UAAUA,CAACC,MAAkB;IAC3B,MAAMP,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IACzE,OAAO,IAAI,CAACL,IAAI,CAACa,GAAG,CAAM,IAAI,CAACZ,MAAM,EAAEW,MAAM,EAAE;MAAEJ;IAAO,CAAE,CAAC;EAC7D;EAEAM,cAAcA,CAACF,MAAsB;IACnC,MAAMP,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IACzE,OAAO,IAAI,CAACL,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACZ,MAAM,WAAW,EAAEW,MAAM,EAAE;MAAEJ;IAAO,CAAE,CAAC;EAC3E;;;;;AArBWT,cAAc,GAAAgB,UAAA,EAH1BpB,UAAU,CAAC;EACVqB,UAAU,EAAE;CACb,CAAC,C,EACWjB,cAAc,CAsB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}