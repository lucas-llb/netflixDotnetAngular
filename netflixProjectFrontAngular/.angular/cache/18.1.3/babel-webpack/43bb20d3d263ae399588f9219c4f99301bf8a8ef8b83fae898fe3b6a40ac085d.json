{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./user.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./user.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { ProfileService } from '../../../services/profile.service';\nimport { ToastComponent } from '../../common/toast/toast.component';\nimport { ToastModule } from 'primeng/toast';\nimport { CommonModule } from '@angular/common';\nlet UserComponent = class UserComponent {\n  fb;\n  router;\n  profileService;\n  userForm;\n  color = '';\n  toastIsOpen = false;\n  errorMessage = '';\n  initialEmail = '';\n  createdAt = '';\n  constructor(fb, router, profileService) {\n    this.fb = fb;\n    this.router = router;\n    this.profileService = profileService;\n    this.userForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.maxLength(20)]],\n      lastName: ['', [Validators.required, Validators.maxLength(20)]],\n      phone: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      created_at: ['']\n    });\n  }\n  ngOnInit() {\n    this.profileService.fetchCurrent().subscribe(user => {\n      this.userForm.patchValue({\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phone: user.phone,\n        email: user.email,\n        created_at: user.createdAt\n      });\n      this.initialEmail = user.email;\n      this.createdAt = user.createdAt;\n    });\n  }\n  handleUserUpdate() {\n    if (this.userForm.valid) {\n      this.profileService.userUpdate(this.userForm.value).subscribe({\n        next: () => {\n          this.showToast('User updated!', 'bg-success text-light');\n          if (this.userForm.value.email !== this.initialEmail) {\n            sessionStorage.clear();\n            this.router.navigate(['/']);\n          }\n        },\n        error: err => {\n          this.showToast(err.error.message, 'bg-danger text-light');\n        }\n      });\n    }\n  }\n  showToast(message, color) {\n    this.errorMessage = message;\n    this.toastIsOpen = true;\n    this.color = color;\n    setTimeout(() => {\n      this.toastIsOpen = false;\n    }, 3000);\n  }\n  static ctorParameters = () => [{\n    type: FormBuilder\n  }, {\n    type: Router\n  }, {\n    type: ProfileService\n  }];\n};\nUserComponent = __decorate([Component({\n  selector: 'app-user-form',\n  standalone: true,\n  imports: [ToastComponent, ToastModule, FormsModule, RouterModule, CommonModule, ReactiveFormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], UserComponent);\nexport { UserComponent };","map":{"version":3,"names":["Component","FormBuilder","FormsModule","ReactiveFormsModule","Validators","Router","RouterModule","ProfileService","ToastComponent","ToastModule","CommonModule","UserComponent","fb","router","profileService","userForm","color","toastIsOpen","errorMessage","initialEmail","createdAt","constructor","group","firstName","required","maxLength","lastName","phone","email","created_at","ngOnInit","fetchCurrent","subscribe","user","patchValue","handleUserUpdate","valid","userUpdate","value","next","showToast","sessionStorage","clear","navigate","error","err","message","setTimeout","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\components\\profile\\user\\user.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ProfileService } from '../../../services/profile.service';\r\nimport { ToastComponent } from '../../common/toast/toast.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { CommonModule} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  standalone: true,\r\n  imports: [ToastComponent, ToastModule, FormsModule, RouterModule, CommonModule, ReactiveFormsModule],\r\n  templateUrl: './user.component.html',\r\n  styleUrl: './user.component.scss',\r\n})\r\nexport class UserComponent {\r\n  userForm: FormGroup;\r\n  color: string = '';\r\n  toastIsOpen: boolean = false;\r\n  errorMessage: string = '';\r\n  initialEmail: string = '';\r\n  createdAt: string = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private profileService: ProfileService\r\n  ) {\r\n    this.userForm = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.maxLength(20)]],\r\n      lastName: ['', [Validators.required, Validators.maxLength(20)]],\r\n      phone: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      created_at: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.profileService.fetchCurrent().subscribe((user) => {\r\n      this.userForm.patchValue({\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        phone: user.phone,\r\n        email: user.email,\r\n        created_at: user.createdAt,\r\n      });\r\n      this.initialEmail = user.email;\r\n      this.createdAt = user.createdAt;\r\n    });\r\n  }\r\n\r\n  handleUserUpdate(): void {\r\n    if (this.userForm.valid) {\r\n      this.profileService.userUpdate(this.userForm.value).subscribe({\r\n        next: () => {\r\n          this.showToast('User updated!', 'bg-success text-light');\r\n          if (this.userForm.value.email !== this.initialEmail) {\r\n            sessionStorage.clear();\r\n            this.router.navigate(['/']);\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.showToast(err.error.message, 'bg-danger text-light');\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  private showToast(message: string, color: string): void {\r\n    this.errorMessage = message;\r\n    this.toastIsOpen = true;\r\n    this.color = color;\r\n    setTimeout(() => {\r\n      this.toastIsOpen = false;\r\n    }, 3000);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}