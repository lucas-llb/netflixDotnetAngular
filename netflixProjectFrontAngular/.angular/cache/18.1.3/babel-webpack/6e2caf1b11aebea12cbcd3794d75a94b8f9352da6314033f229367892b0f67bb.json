{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lucas/OneDrive/Documents/Github/netflixProjectFrontAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./serie.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./serie.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { SerieService } from '../../services/serie.service';\nimport { environment } from '../../environment';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { SpinnerComponent } from '../../components/common/spinner/spinner.component';\nimport { HeaderAuthComponent } from '../../components/common/header-auth/header-auth.component';\nimport { EpisodeListComponent } from '../../components/episode-list/episode-list.component';\nimport { FooterComponent } from '../../components/common/footer/footer.component';\nimport { CommonModule } from '@angular/common';\nlet SerieComponent = class SerieComponent {\n  router;\n  route;\n  serieService;\n  serie = {\n    id: 0,\n    name: '',\n    synopsis: '',\n    thumbnailUrl: '',\n    episodes: []\n  };\n  liked = false;\n  favorited = false;\n  loading = true;\n  backendApiUrl = environment.BACKEND_API_URL;\n  constructor(router, route, serieService) {\n    this.router = router;\n    this.route = route;\n    this.serieService = serieService;\n  }\n  ngOnInit() {\n    if (!sessionStorage.getItem('netflix-token')) {\n      this.router.navigate(['/login']);\n    } else {\n      this.loading = false;\n    }\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.getSerie(id);\n      }\n    });\n  }\n  getSerie(id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.serieService.getEpisodes(id).subscribe({\n        next: res => {\n          _this.serie = res.data;\n          _this.liked = res.data.liked;\n          _this.favorited = res.data.favorited;\n        }\n      });\n    })();\n  }\n  handleLikeSerie() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.liked) {\n        _this2.serieService.removeLike(_this2.serie.id).subscribe({\n          next: () => {\n            _this2.liked = false;\n          }\n        });\n      } else {\n        _this2.serieService.addLike(_this2.serie.id).subscribe({\n          next: () => {\n            _this2.liked = true;\n          }\n        });\n      }\n    })();\n  }\n  handleFavoriteSerie() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.favorited) {\n        _this3.serieService.removeFavorite(_this3.serie.id).subscribe({\n          next: () => {\n            _this3.favorited = false;\n          }\n        });\n      } else {\n        _this3.serieService.addToFavorite(_this3.serie.id).subscribe({\n          next: () => {\n            _this3.favorited = true;\n          }\n        });\n      }\n    })();\n  }\n  watchNow() {\n    // Implement watch now functionality\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: SerieService\n  }];\n};\nSerieComponent = __decorate([Component({\n  selector: 'app-serie',\n  standalone: true,\n  imports: [SpinnerComponent, HeaderAuthComponent, EpisodeListComponent, FooterComponent, RouterModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], SerieComponent);\nexport { SerieComponent };","map":{"version":3,"names":["Component","SerieService","environment","ActivatedRoute","Router","RouterModule","SpinnerComponent","HeaderAuthComponent","EpisodeListComponent","FooterComponent","CommonModule","SerieComponent","router","route","serieService","serie","id","name","synopsis","thumbnailUrl","episodes","liked","favorited","loading","backendApiUrl","BACKEND_API_URL","constructor","ngOnInit","sessionStorage","getItem","navigate","paramMap","subscribe","params","get","getSerie","_this","_asyncToGenerator","getEpisodes","next","res","data","handleLikeSerie","_this2","removeLike","addLike","handleFavoriteSerie","_this3","removeFavorite","addToFavorite","watchNow","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\pages\\serie\\serie.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SerieService, SerieType } from '../../services/serie.service';\r\nimport { environment } from '../../environment';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { SpinnerComponent } from '../../components/common/spinner/spinner.component';\r\nimport { HeaderAuthComponent } from '../../components/common/header-auth/header-auth.component';\r\nimport { EpisodeListComponent } from '../../components/episode-list/episode-list.component';\r\nimport { FooterComponent } from '../../components/common/footer/footer.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-serie',\r\n  standalone: true,\r\n  imports: [SpinnerComponent, HeaderAuthComponent, EpisodeListComponent, FooterComponent, RouterModule, CommonModule],\r\n  templateUrl: './serie.component.html',\r\n  styleUrl: './serie.component.scss'\r\n})\r\nexport class SerieComponent implements OnInit {\r\n  serie: SerieType = {\r\n    id: 0,\r\n    name: '',\r\n    synopsis: '',\r\n    thumbnailUrl : '',\r\n    episodes: [],\r\n  };\r\n  liked = false;\r\n  favorited = false;\r\n  loading = true;\r\n  backendApiUrl = environment.BACKEND_API_URL;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private serieService: SerieService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!sessionStorage.getItem('netflix-token')) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const id = params.get('id');\r\n      if (id) {\r\n        this.getSerie(id);\r\n      }\r\n    });\r\n  }\r\n\r\n  async getSerie(id: string): Promise<void> {\r\n    this.serieService.getEpisodes(id).subscribe({\r\n      next: (res) => {\r\n        this.serie = res.data;\r\n        this.liked = res.data.liked;\r\n        this.favorited = res.data.favorited;\r\n      }\r\n    });\r\n  }\r\n\r\n  async handleLikeSerie(): Promise<void> {\r\n    if (this.liked) {\r\n      this.serieService.removeLike(this.serie!.id).subscribe({\r\n        next: () => {\r\n          this.liked = false;\r\n        }\r\n      });\r\n    } else {\r\n      this.serieService.addLike(this.serie!.id).subscribe({\r\n        next: () => {\r\n          this.liked = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async handleFavoriteSerie(): Promise<void> {\r\n    if (this.favorited) {\r\n      this.serieService.removeFavorite(this.serie!.id).subscribe({\r\n        next: () => {\r\n          this.favorited = false;\r\n        }\r\n      });\r\n    } else {\r\n      this.serieService.addToFavorite(this.serie!.id).subscribe({\r\n        next: () => {\r\n          this.favorited = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  watchNow(): void {\r\n    // Implement watch now functionality\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}