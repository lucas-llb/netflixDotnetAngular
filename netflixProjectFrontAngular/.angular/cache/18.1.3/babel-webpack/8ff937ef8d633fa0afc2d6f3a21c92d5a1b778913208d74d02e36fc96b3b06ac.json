{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lucas/OneDrive/Documents/Github/netflixProjectFrontAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { HeaderGenericComponent } from '../../components/common/header-generic/header-generic.component';\nimport { ToastComponent } from '../../components/common/toast/toast.component';\nimport { FooterComponent } from '../../components/common/footer/footer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nlet LoginComponent = class LoginComponent {\n  router;\n  fb;\n  authService;\n  loginForm;\n  toastColor = '';\n  toastIsOpen = false;\n  toastMessage = '';\n  constructor(router, fb, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.authService = authService;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    if (sessionStorage.getItem('netflix-token')) {\n      this.router.navigate(['/home']);\n    }\n  }\n  handleLogin() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.loginForm.valid) {\n        const {\n          email,\n          password\n        } = _this.loginForm.value;\n        _this.authService.login({\n          email,\n          password\n        }).subscribe({\n          next: ({\n            token\n          }) => {\n            sessionStorage.setItem('netflix-token', token);\n            _this.router.navigate(['/home']);\n          },\n          error: () => {\n            _this.showToast('bg-danger', 'E-mail or password incorrect!');\n          }\n        });\n      }\n    })();\n  }\n  showToast(color, message) {\n    this.toastColor = color;\n    this.toastMessage = message;\n    this.toastIsOpen = true;\n    setTimeout(() => {\n      this.toastIsOpen = false;\n    }, 3000);\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }, {\n    type: FormBuilder\n  }, {\n    type: AuthService\n  }];\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  template: __NG_CLI_RESOURCE__0,\n  imports: [HeaderGenericComponent, FormsModule, ToastComponent, FooterComponent, RouterModule, ReactiveFormsModule],\n  animations: [BrowserAnimationsModule],\n  standalone: true,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Router","RouterModule","FormBuilder","FormsModule","ReactiveFormsModule","Validators","AuthService","HeaderGenericComponent","ToastComponent","FooterComponent","BrowserAnimationsModule","LoginComponent","router","fb","authService","loginForm","toastColor","toastIsOpen","toastMessage","constructor","group","email","required","password","ngOnInit","sessionStorage","getItem","navigate","handleLogin","_this","_asyncToGenerator","valid","value","login","subscribe","next","token","setItem","error","showToast","color","message","setTimeout","__decorate","selector","template","__NG_CLI_RESOURCE__0","imports","animations","standalone"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HeaderGenericComponent } from '../../components/common/header-generic/header-generic.component';\r\nimport { ToastComponent } from '../../components/common/toast/toast.component';\r\nimport { FooterComponent } from '../../components/common/footer/footer.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  imports: [HeaderGenericComponent, FormsModule, ToastComponent, FooterComponent, RouterModule, ReactiveFormsModule],\r\n  animations: [BrowserAnimationsModule],\r\n  standalone: true,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  toastColor: string = '';\r\n  toastIsOpen: boolean = false;\r\n  toastMessage: string = '';\r\n  \r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private readonly authService: AuthService\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    if (sessionStorage.getItem('netflix-token')) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n  \r\n  async handleLogin(): Promise<void> {\r\n    if (this.loginForm.valid) {\r\n      const { email, password } = this.loginForm.value;\r\n      this.authService.login({ email, password }).subscribe({\r\n        next: ({token}) => {\r\n          sessionStorage.setItem('netflix-token', token);\r\n          this.router.navigate(['/home']);\r\n        },\r\n        error: () => {\r\n          this.showToast('bg-danger', 'E-mail or password incorrect!');\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  showToast(color: string, message: string): void {\r\n    this.toastColor = color;\r\n    this.toastMessage = message;\r\n    this.toastIsOpen = true;\r\n    setTimeout(() => {\r\n      this.toastIsOpen = false;\r\n    }, 3000);\r\n  }\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,MAAM,EAAEC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,WAAW,EAAaC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AACrG,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,sBAAsB,QAAQ,iEAAiE;AACxG,SAASC,cAAc,QAAQ,+CAA+C;AAC9E,SAASC,eAAe,QAAQ,iDAAiD;AACjF,SAASC,uBAAuB,QAAQ,sCAAsC;AAUvE,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOfC,MAAA;EACAC,EAAA;EACSC,WAAA;EARnBC,SAAS;EACTC,UAAU,GAAW,EAAE;EACvBC,WAAW,GAAY,KAAK;EAC5BC,YAAY,GAAW,EAAE;EAEzBC,YACUP,MAAc,EACdC,EAAe,EACNC,WAAwB;IAFjC,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,EAAE,GAAFA,EAAE;IACO,KAAAC,WAAW,GAAXA,WAAW;IAE5B,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACO,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACgB,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACiB,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAIC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC3C,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC;EACF;EAEMC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACf,IAAID,KAAI,CAACd,SAAS,CAACgB,KAAK,EAAE;QACxB,MAAM;UAAEV,KAAK;UAAEE;QAAQ,CAAE,GAAGM,KAAI,CAACd,SAAS,CAACiB,KAAK;QAChDH,KAAI,CAACf,WAAW,CAACmB,KAAK,CAAC;UAAEZ,KAAK;UAAEE;QAAQ,CAAE,CAAC,CAACW,SAAS,CAAC;UACpDC,IAAI,EAAEA,CAAC;YAACC;UAAK,CAAC,KAAI;YAChBX,cAAc,CAACY,OAAO,CAAC,eAAe,EAAED,KAAK,CAAC;YAC9CP,KAAI,CAACjB,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;UACjC,CAAC;UACDW,KAAK,EAAEA,CAAA,KAAK;YACVT,KAAI,CAACU,SAAS,CAAC,WAAW,EAAE,+BAA+B,CAAC;UAC9D;SACD,CAAC;MACJ;IAAC;EACH;EAEAA,SAASA,CAACC,KAAa,EAAEC,OAAe;IACtC,IAAI,CAACzB,UAAU,GAAGwB,KAAK;IACvB,IAAI,CAACtB,YAAY,GAAGuB,OAAO;IAC3B,IAAI,CAACxB,WAAW,GAAG,IAAI;IACvByB,UAAU,CAAC,MAAK;MACd,IAAI,CAACzB,WAAW,GAAG,KAAK;IAC1B,CAAC,EAAE,IAAI,CAAC;EACV;;;;;;;;;AA7CWN,cAAc,GAAAgC,UAAA,EAR1B5C,SAAS,CAAC;EACT6C,QAAQ,EAAE,WAAW;EACrBC,QAAA,EAAAC,oBAAqC;EAErCC,OAAO,EAAE,CAACxC,sBAAsB,EAAEJ,WAAW,EAAEK,cAAc,EAAEC,eAAe,EAAER,YAAY,EAAEG,mBAAmB,CAAC;EAClH4C,UAAU,EAAE,CAACtC,uBAAuB,CAAC;EACrCuC,UAAU,EAAE,IAAI;;CACjB,CAAC,C,EACWtC,cAAc,CA8C1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}