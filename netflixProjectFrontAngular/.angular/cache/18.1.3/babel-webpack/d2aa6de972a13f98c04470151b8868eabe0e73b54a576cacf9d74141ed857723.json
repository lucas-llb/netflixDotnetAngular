{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lucas/OneDrive/Documents/Github/netflixProjectFrontAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./episode.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./episode.component.scss?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { EpisodeService } from '../../services/episodes.service';\nimport { SerieService } from '../../services/serie.service';\nimport { SpinnerComponent } from '../../components/common/spinner/spinner.component';\nimport { HeaderGenericComponent } from '../../components/common/header-generic/header-generic.component';\nimport { environment } from '../../environment';\nimport { CommonModule } from '@angular/common';\nlet EpisodeComponent = class EpisodeComponent {\n  route;\n  router;\n  episodeService;\n  serieService;\n  serie = {\n    id: 0,\n    name: '',\n    synopsis: '',\n    thumbnailUrl: '',\n    episodes: []\n  };\n  episodeTime = 0;\n  getEpisodeTime = 0;\n  isReady = false;\n  loading = true;\n  episodeOrder;\n  episodeId;\n  serieId;\n  player;\n  constructor(route, router, episodeService, serieService) {\n    this.route = route;\n    this.router = router;\n    this.episodeService = episodeService;\n    this.serieService = serieService;\n    this.episodeOrder = parseFloat(this.route.snapshot.paramMap.get('order') || '');\n    this.episodeId = parseFloat(this.route.snapshot.queryParamMap.get('episodeid') || '');\n    this.serieId = this.route.snapshot.queryParamMap.get('serieid') || '';\n  }\n  ngOnInit() {\n    if (!sessionStorage.getItem('netflix-token')) {\n      this.router.navigate(['/login']);\n    } else {\n      this.loading = false;\n    }\n    this.getSerie();\n    this.handleGetEpisodeTime();\n  }\n  handleGetEpisodeTime() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.episodeService.getWatchTime(_this.episodeId).subscribe({\n        next: res => {\n          if (res.data !== null) {\n            _this.getEpisodeTime = res.data.seconds;\n          }\n        }\n      });\n    })();\n  }\n  handleSetEpisodeTime() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.episodeService.setWatchTime({\n        episodeId: _this2.episodeId,\n        seconds: Math.round(_this2.episodeTime)\n      }).subscribe();\n    })();\n  }\n  getSerie() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof _this3.serieId !== 'string') return;\n      _this3.serieService.getEpisodes(_this3.serieId).subscribe({\n        next: res => {\n          _this3.serie = res.data;\n        }\n      });\n    })();\n  }\n  handlePlayerTime() {\n    this.player.seekTo(this.getEpisodeTime);\n    this.isReady = true;\n  }\n  handleLastEpisode() {\n    this.router.navigate([`/serie/episode/${this.episodeOrder - 1}`], {\n      queryParams: {\n        serieid: this.serie?.id,\n        episodeid: this.serie.episodes[this.episodeOrder - 1]?.id\n      }\n    });\n  }\n  handleNextEpisode() {\n    this.router.navigate([`/serie/episode/${this.episodeOrder + 1}`], {\n      queryParams: {\n        serieid: this.serie?.id,\n        episodeid: this.serie.episodes[this.episodeOrder + 1]?.id\n      }\n    });\n  }\n  handleVideoUpdate($event) {\n    const video = $event.target;\n    this.episodeTime = video.currentTime;\n  }\n  mountSourceUrl() {\n    return `${environment.BACKEND_API_URL}/episodes/stream?videoUrl=${this.serie.episodes[this.episodeOrder].videoUrl}&token=${sessionStorage.getItem('netflix-token')}`;\n  }\n  static ctorParameters = () => [{\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }, {\n    type: EpisodeService\n  }, {\n    type: SerieService\n  }];\n  static propDecorators = {\n    player: [{\n      type: ViewChild,\n      args: ['player']\n    }]\n  };\n};\nEpisodeComponent = __decorate([Component({\n  selector: 'app-episode',\n  standalone: true,\n  imports: [SpinnerComponent, RouterModule, HeaderGenericComponent, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], EpisodeComponent);\nexport { EpisodeComponent };","map":{"version":3,"names":["Component","ViewChild","ActivatedRoute","Router","RouterModule","EpisodeService","SerieService","SpinnerComponent","HeaderGenericComponent","environment","CommonModule","EpisodeComponent","route","router","episodeService","serieService","serie","id","name","synopsis","thumbnailUrl","episodes","episodeTime","getEpisodeTime","isReady","loading","episodeOrder","episodeId","serieId","player","constructor","parseFloat","snapshot","paramMap","get","queryParamMap","ngOnInit","sessionStorage","getItem","navigate","getSerie","handleGetEpisodeTime","_this","_asyncToGenerator","getWatchTime","subscribe","next","res","data","seconds","handleSetEpisodeTime","_this2","setWatchTime","Math","round","_this3","getEpisodes","handlePlayerTime","seekTo","handleLastEpisode","queryParams","serieid","episodeid","handleNextEpisode","handleVideoUpdate","$event","video","target","currentTime","mountSourceUrl","BACKEND_API_URL","videoUrl","args","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\pages\\episode\\episode.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { EpisodeService } from '../../services/episodes.service';\r\nimport { SerieService, SerieType } from '../../services/serie.service';\r\nimport { SpinnerComponent } from '../../components/common/spinner/spinner.component';\r\nimport { HeaderGenericComponent } from '../../components/common/header-generic/header-generic.component';\r\nimport { environment } from '../../environment';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-episode',\r\n  standalone: true,\r\n  imports: [SpinnerComponent, RouterModule, HeaderGenericComponent, CommonModule],\r\n  templateUrl: './episode.component.html',\r\n  styleUrl: './episode.component.scss'\r\n})\r\nexport class EpisodeComponent implements OnInit{\r\n  serie: SerieType = {\r\n    id: 0,\r\n    name: '',\r\n    synopsis: '',\r\n    thumbnailUrl : '',\r\n    episodes: [],\r\n  };\r\n  episodeTime: number = 0;\r\n  getEpisodeTime: number = 0;\r\n  isReady: boolean = false;\r\n  loading: boolean = true;\r\n  episodeOrder: number;\r\n  episodeId: number;\r\n  serieId: string;\r\n\r\n  @ViewChild('player') player: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private episodeService: EpisodeService,\r\n    private serieService: SerieService\r\n  ) {\r\n    this.episodeOrder = parseFloat(this.route.snapshot.paramMap.get('order') || '');\r\n    this.episodeId = parseFloat(this.route.snapshot.queryParamMap.get('episodeid') || '');\r\n    this.serieId = this.route.snapshot.queryParamMap.get('serieid') || '';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!sessionStorage.getItem('netflix-token')) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n    this.getSerie();\r\n    this.handleGetEpisodeTime();\r\n  }\r\n\r\n  async handleGetEpisodeTime() {\r\n    this.episodeService.getWatchTime(this.episodeId).subscribe({\r\n      next: (res) => {\r\n        if (res.data !== null) {\r\n          this.getEpisodeTime = res.data.seconds;\r\n        }\r\n      }\r\n    });    \r\n  }\r\n\r\n  async handleSetEpisodeTime() {\r\n    this.episodeService.setWatchTime({\r\n      episodeId: this.episodeId,\r\n      seconds: Math.round(this.episodeTime)\r\n    }).subscribe();\r\n  }\r\n\r\n  async getSerie() {\r\n    if (typeof this.serieId !== 'string') return;\r\n    this.serieService.getEpisodes(this.serieId).subscribe({\r\n      next: (res) => {\r\n        this.serie = res.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  handlePlayerTime() {\r\n    this.player.seekTo(this.getEpisodeTime);\r\n    this.isReady = true;\r\n  }\r\n\r\n  handleLastEpisode() {\r\n    this.router.navigate([`/serie/episode/${this.episodeOrder - 1}`], { queryParams: { serieid: this.serie?.id, episodeid: this.serie!.episodes![this.episodeOrder - 1]?.id } });\r\n  }\r\n\r\n  handleNextEpisode() {\r\n    this.router.navigate([`/serie/episode/${this.episodeOrder + 1}`], { queryParams: { serieid: this.serie?.id, episodeid: this.serie!.episodes![this.episodeOrder + 1]?.id } });\r\n  }\r\n\r\n  handleVideoUpdate($event: Event){\r\n    const video = $event.target as HTMLVideoElement;\r\n    this.episodeTime = video.currentTime; \r\n  }\r\n\r\n  mountSourceUrl(): string\r\n  {\r\n    return `${environment.BACKEND_API_URL}/episodes/stream?videoUrl=${this.serie!.episodes![this.episodeOrder].videoUrl}&token=${sessionStorage.getItem('netflix-token')}`\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}