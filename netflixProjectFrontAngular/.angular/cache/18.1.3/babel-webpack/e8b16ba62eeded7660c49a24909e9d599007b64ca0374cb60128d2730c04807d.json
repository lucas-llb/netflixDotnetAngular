{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lucas/OneDrive/Documents/Github/netflixProjectFrontAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./search.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./search.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { SerieService } from '../../services/serie.service';\nlet SearchComponent = class SearchComponent {\n  router;\n  serieService;\n  http;\n  searchName;\n  searchResult = [];\n  loading = true;\n  constructor(router, serieService, http) {\n    this.router = router;\n    this.serieService = serieService;\n    this.http = http;\n  }\n  searchSeries() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.searchName) {\n        _this.serieService.getSearch(_this.searchName).subscribe({\n          next: res => {\n            _this.searchResult = res.data.series;\n          }\n        });\n      }\n    })();\n  }\n  ngOnInit() {\n    this.searchName = this.router.url.split('?name=')[1];\n    this.searchSeries();\n    if (!sessionStorage.getItem('netflix-token')) {\n      this.router.navigate(['/login']);\n    } else {\n      this.loading = false;\n    }\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }, {\n    type: SerieService\n  }, {\n    type: HttpClient\n  }];\n};\nSearchComponent = __decorate([Component({\n  selector: 'app-search',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], SearchComponent);\nexport { SearchComponent };","map":{"version":3,"names":["Component","Router","HttpClient","SerieService","SearchComponent","router","serieService","http","searchName","searchResult","loading","constructor","searchSeries","_this","_asyncToGenerator","getSearch","subscribe","next","res","data","series","ngOnInit","url","split","sessionStorage","getItem","navigate","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\pages\\search\\search.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SerieService, SerieType } from '../../services/serie.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  searchName: string | undefined;\r\n  searchResult: SerieType[] = [];\r\n  loading: boolean = true;\r\n\r\n  constructor(private router: Router, private serieService: SerieService, private http: HttpClient) {}\r\n\r\n  async searchSeries() {\r\n    if (this.searchName) {\r\n      this.serieService.getSearch(this.searchName).subscribe({\r\n        next: (res) => {\r\n          this.searchResult = res.data.series;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchName = this.router.url.split('?name=')[1];\r\n    this.searchSeries();\r\n\r\n    if (!sessionStorage.getItem('netflix-token')) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,MAAM,QAAQ,iBAAiB;AAExC,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,YAAY,QAAmB,8BAA8B;AAO/D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAKNC,MAAA;EAAwBC,YAAA;EAAoCC,IAAA;EAJhFC,UAAU;EACVC,YAAY,GAAgB,EAAE;EAC9BC,OAAO,GAAY,IAAI;EAEvBC,YAAoBN,MAAc,EAAUC,YAA0B,EAAUC,IAAgB;IAA5E,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,IAAI,GAAJA,IAAI;EAAe;EAE7FK,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChB,IAAID,KAAI,CAACL,UAAU,EAAE;QACnBK,KAAI,CAACP,YAAY,CAACS,SAAS,CAACF,KAAI,CAACL,UAAU,CAAC,CAACQ,SAAS,CAAC;UACrDC,IAAI,EAAGC,GAAG,IAAI;YACZL,KAAI,CAACJ,YAAY,GAAGS,GAAG,CAACC,IAAI,CAACC,MAAM;UACrC;SACD,CAAC;MACJ;IAAC;EACH;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACb,UAAU,GAAG,IAAI,CAACH,MAAM,CAACiB,GAAG,CAACC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpD,IAAI,CAACX,YAAY,EAAE;IAEnB,IAAI,CAACY,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC5C,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,MAAM;MACL,IAAI,CAAChB,OAAO,GAAG,KAAK;IACtB;EACF;;;;;;;;;AA1BWN,eAAe,GAAAuB,UAAA,EAL3B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,YAAY;EACtBC,QAAA,EAAAC,oBAAsC;;CAEvC,CAAC,C,EACW1B,eAAe,CA2B3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}