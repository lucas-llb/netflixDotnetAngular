{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./profile.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./profile.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { SpinnerComponent } from '../../components/common/spinner/spinner.component';\nimport { HeaderAuthComponent } from '../../components/common/header-auth/header-auth.component';\nimport { UserComponent } from '../../components/profile/user/user.component';\nimport { PasswordComponent } from '../../components/profile/password/password.component';\nimport { FooterComponent } from '../../components/common/footer/footer.component';\nimport { CommonModule } from '@angular/common';\nlet ProfileComponent = class ProfileComponent {\n  router;\n  form = 'userForm';\n  loading = true;\n  constructor(router) {\n    this.router = router;\n  }\n  ngOnInit() {\n    if (!sessionStorage.getItem('netflix-token')) {\n      this.router.navigate(['/login']);\n    } else {\n      this.loading = false;\n    }\n  }\n  setForm(formName) {\n    this.form = formName;\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }];\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [SpinnerComponent, HeaderAuthComponent, UserComponent, PasswordComponent, FooterComponent, RouterModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"names":["Component","Router","RouterModule","SpinnerComponent","HeaderAuthComponent","UserComponent","PasswordComponent","FooterComponent","CommonModule","ProfileComponent","router","form","loading","constructor","ngOnInit","sessionStorage","getItem","navigate","setForm","formName","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\lucas\\OneDrive\\Documents\\Github\\netflixProjectFrontAngular\\src\\app\\pages\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { SpinnerComponent } from '../../components/common/spinner/spinner.component';\r\nimport { HeaderAuthComponent } from '../../components/common/header-auth/header-auth.component';\r\nimport { UserComponent } from '../../components/profile/user/user.component';\r\nimport { PasswordComponent } from '../../components/profile/password/password.component';\r\nimport { FooterComponent } from '../../components/common/footer/footer.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [SpinnerComponent, HeaderAuthComponent, UserComponent, PasswordComponent, FooterComponent, RouterModule, CommonModule],\r\n  templateUrl: './profile.component.html',\r\n  styleUrl: './profile.component.scss'\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  form: string = 'userForm';\r\n  loading: boolean = true;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!sessionStorage.getItem('netflix-token')) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  setForm(formName: string): void {\r\n    this.form = formName;\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,MAAM,EAAEC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,gBAAgB,QAAQ,mDAAmD;AACpF,SAASC,mBAAmB,QAAQ,2DAA2D;AAC/F,SAASC,aAAa,QAAQ,8CAA8C;AAC5E,SAASC,iBAAiB,QAAQ,sDAAsD;AACxF,SAASC,eAAe,QAAQ,iDAAiD;AACjF,SAASC,YAAY,QAAQ,iBAAiB;AASvC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAIPC,MAAA;EAHpBC,IAAI,GAAW,UAAU;EACzBC,OAAO,GAAY,IAAI;EAEvBC,YAAoBH,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCI,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC5C,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,MAAM;MACL,IAAI,CAACL,OAAO,GAAG,KAAK;IACtB;EACF;EAEAM,OAAOA,CAACC,QAAgB;IACtB,IAAI,CAACR,IAAI,GAAGQ,QAAQ;EACtB;;;;;AAhBWV,gBAAgB,GAAAW,UAAA,EAP5BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,aAAa;EACvBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACpB,gBAAgB,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,eAAe,EAAEL,YAAY,EAAEM,YAAY,CAAC;EAC/HgB,QAAA,EAAAC,oBAAuC;;CAExC,CAAC,C,EACWhB,gBAAgB,CAiB5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}